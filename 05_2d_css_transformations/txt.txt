-->Câteva dintre operaţiile mai complexe care se pot efectua cu ajutorul lui CSS pe elemente sunt transformările, tranziţiile şi animaţia!

-->CSS susţine transformările bidimensionale şi tridimensionale.

-->În transformările CSS bidimensionale (2D) intră:

.translaţia (translate);
.rotirea (rotate);
.scalarea/schimbarea dimensiunii (scale);
.înclinarea (skew).

-->Punctele aflate deasupra punctului de referinţă au valori negative ale coordonatelor y. De asemenea, toate punctele aflate în stânga punctului de referinţă au valori negative ale coordonatelor x.

!!!!Atenţie la faptul că sistemul de coordonate pe web se deosebeşte de sistemele de coordonate din matematică sau mecanică. Valorile pozitive pe axele x şi y pe web se află în al patrulea cadran (în dreapta jos), în timp ce în matematică se află în primul cadran (în dreapta sus).

-->Pentru ca un element să fie mutat în raport cu poziţia sa normală, putem să folosim transformarea translate. Astfel, este suficient să folosim funcţia translate() ca să transformăm mișcarea elementului. 

.translate(x-axis)
.translate(x-axis, y-axis)

--> Funcţia translate() poate accepta unul sau doi parametri. Când acceptă un parametru, acesta se referă la valoarea translaţiei pe axa x.
 A doua valoare defineşte translaţia pe axa y. Având în vedere că este vorba de o transformare 2D, se aplică sistemul de coordonate menţionat mai sus, cu două axe, la care punctul de referinţă (punctul de origine/origin) se potriveşte cu punctul din stânga sus al elementului care se transformă. 


--> Rotirea elementelor HTML se poate obţine cu funcţia CSS cu numele rotate():
.rotate(degrees)

--> Parametrul degrees se referă la unghiul de rotire şi se exprimă prin folosirea unităţii deg (grade).

--> Exemplul care ilustrează rotirea unui element div este următorul:

.#transformed {      
transform: rotate(20deg);
}

-->Proprietatea transform-origin se poate folosi pentru a seta punctul de referinţă al efectuării transformărilor. Valoarea implicită a acestei proprietăţi este:

.transform-origin: 50% 50% 0;

--> transform-origin poate accepta în total trei valori: transform-origin: x-offset y-offset z-offset;

--> Pe lângă definirea tuturor celor trei valori, transform-origin poate fi specificată şi într-o formă cu două sau o singură valoare: .transform-origin: x-offset y-offset; transform-origin: x-offset;

-->Sintaxa impune următoarele reguli:

.când se specifică trei valori, acestea se referă la translaţia pe axa x, y şi z;
.când se specifică două valori, acestea se referă la translaţia pe axa x şi y, în timp ce pentru valoarea translaţiei pe axa z se ia 0;
.când se specifică o valoare, aceasta se referă la translaţia pe axa x, în timp ce pentru translaţia pe axa y se va lua valoarea de 50%, iar pentru translaţia pe axa z se ia valoarea 0.


--> Ca să mărim şi să micşorăm elementele HTML, putem să folosim funcţia scale() a proprietăţii transform. Sintaxa ei este următoarea:

.scale(width_ratio, height_ration)

--> Valoarea 1 ne arată că nu va avea loc nicio schimbare a dimensiunii. În mod similar, valoarea 2 ne arată că dimensiunea se va mări de două ori, iar valoarea 0.5 ne arată că dimensiunea să va micşora de două ori.

.#transformed {      
transform: scale(0.5, 2);
}


--> CSS are trei funcţii diferite prin care se poate efectua înclinarea elementelor, şi anume:

.skewX(angleX)
.skewY(angleY)
.skew(angleX, angleY)

--> Funcţia skewX() înclină elementul pe axa x. Funcţia skewY() face acelaşi lucru, dar pe axa y, în timp ce funcţia skew() poate înclina elementul pe ambele axe.

--> Exemplul de utilizare a acestei transformări:

#transformed{       
transform: skew(20deg, 10deg);
}

--> Transformările 2D se pot obţine şi cu funcţia matrix() care unifică toate transformările CSS.
--> Confirmarea acestui lucru se poate găsi şi în browser, în panoul <Computed>. De exemplu, pe un element se definește următoarea transformare:

.transform: translate(50px, 50px);

--> Interesant este că funcţia matrix() acceptă valori pentru efectuarea scalării, înclinării şi translației, dar nu şi pentru rotire. Prin urmare, funcţia matrix() efectuează rotirea prin combinarea scalării şi a înclinării:
.transform: rotate(20deg);

Linia browserului tocmai prezentată se transformă în:
.transform: matrix(0.939693, 0.34202, -0.34202, 0.939693, 0, 0);






